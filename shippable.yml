resources:
  - name: sample_node_repo
    type: gitRepo
    repoPath: jatindogra/sample-repo
    configuration:
      integrationName: github
      branches:
        except: "*test"
        only: "master*"
      tags:
        except: none
        only: none   
      buildOnCommit: true
      buildOnPullRequest: false
      buildOnPullRequestClose: false
      buildOnRelease: true
      buildOnTagPush: false
      buildOnFileCommit: "*test"
      shallowDepth: 2
      gitConfig: 
        - dont_know
        - dont_know_2
    initialVersion:
      sha: master
       
pipelines:
  - name: test_pipeline_1
    setup:
      environmentVariables:
        normal:
          - ENV1: value-pipe-1
          - ENV2: value-pipe-2
        encrypted:
          - SECURE_ENV1: test_value-pipe-1
          - SECURE_ENV2: test_value-pipe-2
      runtime: onHost-pipe
    steps:
      - name: in_trigger_step
        type: runSh
        configuration:
          affinityGroup: test_group 
        setup:
          environmentVariables:
            normal:
              - ENV1: value1
              - ENV2: value2
            encrypted:
              - SECURE_ENV1: test_value
              - SECURE_ENV2: test_value
          runtime: onHost
        execution:
          onExecute:
            - echo "executing task command 1"
            - echo "executing task command 2"

      - name: main_step
        type: runSh
        configuration:
          affinityGroup: test_group 
          priority: 9999
          timeoutSeconds: 40
          cache: true
        setup:
          environmentVariables:
            normal:
              - ENV1: value1
              - ENV2: value2
            encrypted:
              - SECURE_ENV1: test_value
              - SECURE_ENV2: test_value
          runtime: onHost
        requires:
          #resources:
           # - someStateResource
            #- someVersionResource
          #steps:
           # - nightlyJob
            #- cronJob
          integrations:
            - github
            - docker
        triggeredBy:
          resources:
            - sample_node_repo
          steps:
            - in_trigger_step
        execution:
          onStart:
            - echo "Prepping build environment"
          onExecute:
            - echo "executing task command 1"
            - echo "executing task command 2"
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete: #always
            - echo "Cleaning up some stuff"
          onCancel:
            - echo "Someone cancelled the job"
